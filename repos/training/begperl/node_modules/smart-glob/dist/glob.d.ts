import memoize from 'memoizee';
export declare type GlobOptions = {
    cwd?: string;
    dot?: boolean;
    absolute?: boolean;
    includeDirs?: boolean;
    flush?: boolean;
    gitignore?: boolean;
    alwaysReturnUnixPaths?: boolean;
    ignore?: string[];
    ignoreGlobs?: string[];
};
/**
 * Find files using bash-like globbing.
 * All paths are normalized compared to node-glob.
 * @param {String} str Glob string
 * @param {String} [options.cwd='.'] Current working directory
 * @param {Boolean} [options.dot=false] Include dotfile matches
 * @param {Boolean} [options.absolute=false] Return absolute paths
 * @param {Boolean} [options.filesOnly=true] Do not include folders if true
 * @param {Boolean} [options.flush=false] Reset cache object
 * @returns {Array} array containing matching files
 */
export declare function glob(str: string, opts?: GlobOptions): Promise<string[]>;
export declare function globSync(str: string, opts?: GlobOptions): string[];
export declare const memoizedGlob: typeof glob & memoize.Memoized<typeof glob>;
export declare const getGlobsFromGitignore: (data?: string) => string[];
