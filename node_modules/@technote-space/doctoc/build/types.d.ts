/// <reference types="node" />
import { Stats } from 'fs';
export declare type TransformOptions = Partial<{
    mode: string;
    moduleName: string;
    maxHeaderLevel: number;
    title: string;
    isNotitle: boolean;
    isFolding: boolean;
    entryPrefix: string;
    processAll: boolean;
    updateOnly: boolean;
    openingComment: string;
    closingComment: string;
    checkOpeningComments: Array<string>;
    checkClosingComments: Array<string>;
    isCustomMode: boolean;
    customTemplate: string;
    itemTemplate: string;
    separator: string;
    footer: string;
}>;
export declare type FileInfo = {
    stat: Stats;
    name: string;
    path: string;
};
export declare type FileAndDirs = {
    directories: Array<FileInfo>;
    markdownFiles: Array<FileInfo>;
};
export declare type HeaderData = {
    text: Array<string>;
    tag: string;
};
export declare type Header = {
    line: number;
    name: string;
    rank: number;
};
export declare type HeaderWithRepetition = Header & {
    repetition: number;
};
export declare type HeaderWithAnchor = HeaderWithRepetition & {
    anchor: string;
    hash: string;
};
export declare type SectionInfo = {
    hasStart: boolean;
    hasEnd: boolean;
    startIdx: number;
    endIdx: number;
};
export declare type TransformResult = {
    transformed: boolean;
    data: string;
    toc: string;
    wrappedToc: string;
    reason: string;
};
